/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../../..";
import { Novu } from "@fern-api/novu";
import * as core from "../../../../core";

export const ChangeResponseDto: core.serialization.ObjectSchema<
    serializers.ChangeResponseDto.Raw,
    Novu.ChangeResponseDto
> = core.serialization.object({
    id: core.serialization.property("_id", core.serialization.string().optional()),
    creatorId: core.serialization.property("_creatorId", core.serialization.string()),
    environmentId: core.serialization.property("_environmentId", core.serialization.string()),
    organizationId: core.serialization.property("_organizationId", core.serialization.string()),
    entityId: core.serialization.property("_entityId", core.serialization.string()),
    enabled: core.serialization.boolean(),
    type: core.serialization.lazy(async () => (await import("../../..")).ChangeResponseDtoProperties),
    change: core.serialization.record(core.serialization.string(), core.serialization.unknown()),
    createdAt: core.serialization.string(),
    parentId: core.serialization.property("_parentId", core.serialization.string().optional()),
});

export declare namespace ChangeResponseDto {
    interface Raw {
        _id?: string | null;
        _creatorId: string;
        _environmentId: string;
        _organizationId: string;
        _entityId: string;
        enabled: boolean;
        type: serializers.ChangeResponseDtoProperties.Raw;
        change: Record<string, unknown>;
        createdAt: string;
        _parentId?: string | null;
    }
}
