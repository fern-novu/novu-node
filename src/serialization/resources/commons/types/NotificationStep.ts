/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../../..";
import { Novu } from "@fern-api/novu";
import * as core from "../../../../core";

export const NotificationStep: core.serialization.ObjectSchema<
    serializers.NotificationStep.Raw,
    Novu.NotificationStep
> = core.serialization.object({
    id: core.serialization.property("_id", core.serialization.string().optional()),
    templateId: core.serialization.property("_templateId", core.serialization.string().optional()),
    active: core.serialization.boolean().optional(),
    shouldStopOnFail: core.serialization.boolean().optional(),
    template: core.serialization.lazyObject(async () => (await import("../../..")).MessageTemplate).optional(),
    filters: core.serialization
        .list(core.serialization.lazyObject(async () => (await import("../../..")).StepFilter))
        .optional(),
    parentId: core.serialization.property("_parentId", core.serialization.string().optional()),
    metadata: core.serialization.lazyObject(async () => (await import("../../..")).NotificationStepMetadata).optional(),
    replyCallback: core.serialization.record(core.serialization.string(), core.serialization.unknown()).optional(),
});

export declare namespace NotificationStep {
    interface Raw {
        _id?: string | null;
        _templateId?: string | null;
        active?: boolean | null;
        shouldStopOnFail?: boolean | null;
        template?: serializers.MessageTemplate.Raw | null;
        filters?: serializers.StepFilter.Raw[] | null;
        _parentId?: string | null;
        metadata?: serializers.NotificationStepMetadata.Raw | null;
        replyCallback?: Record<string, unknown> | null;
    }
}
