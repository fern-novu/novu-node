/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../../..";
import { Novu } from "@fern-api/novu";
import * as core from "../../../../core";

export const NotificationTrigger: core.serialization.ObjectSchema<
    serializers.NotificationTrigger.Raw,
    Novu.NotificationTrigger
> = core.serialization.object({
    type: core.serialization.string(),
    identifier: core.serialization.string(),
    variables: core.serialization.list(
        core.serialization.lazyObject(async () => (await import("../../..")).NotificationTriggerVariable)
    ),
    subscriberVariables: core.serialization
        .list(core.serialization.lazyObject(async () => (await import("../../..")).NotificationTriggerVariable))
        .optional(),
});

export declare namespace NotificationTrigger {
    interface Raw {
        type: string;
        identifier: string;
        variables: serializers.NotificationTriggerVariable.Raw[];
        subscriberVariables?: serializers.NotificationTriggerVariable.Raw[] | null;
    }
}
