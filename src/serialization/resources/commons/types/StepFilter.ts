/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../../..";
import { Novu } from "@fern-api/novu";
import * as core from "../../../../core";

export const StepFilter: core.serialization.ObjectSchema<serializers.StepFilter.Raw, Novu.StepFilter> =
    core.serialization.object({
        isNegated: core.serialization.boolean(),
        type: core.serialization.lazy(async () => (await import("../../..")).StepFilterType),
        value: core.serialization.lazy(async () => (await import("../../..")).StepFilterValue),
        children: core.serialization.list(
            core.serialization.lazyObject(async () => (await import("../../..")).FieldFilterPart)
        ),
    });

export declare namespace StepFilter {
    interface Raw {
        isNegated: boolean;
        type: serializers.StepFilterType.Raw;
        value: serializers.StepFilterValue.Raw;
        children: serializers.FieldFilterPart.Raw[];
    }
}
