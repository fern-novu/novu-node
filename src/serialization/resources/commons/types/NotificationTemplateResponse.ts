/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../../..";
import { Novu } from "@fern-api/novu";
import * as core from "../../../../core";

export const NotificationTemplateResponse: core.serialization.ObjectSchema<
    serializers.NotificationTemplateResponse.Raw,
    Novu.NotificationTemplateResponse
> = core.serialization.object({
    id: core.serialization.property("_id", core.serialization.string().optional()),
    name: core.serialization.string(),
    description: core.serialization.string(),
    active: core.serialization.boolean(),
    draft: core.serialization.boolean(),
    preferenceSettings: core.serialization.lazyObject(async () => (await import("../../..")).PreferenceChannels),
    critical: core.serialization.boolean(),
    tags: core.serialization.list(core.serialization.string()),
    steps: core.serialization.list(
        core.serialization.lazyObject(async () => (await import("../../..")).NotificationStep)
    ),
    organizationId: core.serialization.property("_organizationId", core.serialization.string()),
    creatorId: core.serialization.property("_creatorId", core.serialization.string()),
    environmentId: core.serialization.property("_environmentId", core.serialization.string()),
    triggers: core.serialization.list(
        core.serialization.lazyObject(async () => (await import("../../..")).NotificationTrigger)
    ),
    notificationGroupId: core.serialization.property("_notificationGroupId", core.serialization.string()),
    parentId: core.serialization.property("_parentId", core.serialization.string().optional()),
    deleted: core.serialization.boolean(),
    deletedAt: core.serialization.string(),
    deletedBy: core.serialization.string(),
    notificationGroup: core.serialization
        .lazyObject(async () => (await import("../../..")).NotificationGroup)
        .optional(),
});

export declare namespace NotificationTemplateResponse {
    interface Raw {
        _id?: string | null;
        name: string;
        description: string;
        active: boolean;
        draft: boolean;
        preferenceSettings: serializers.PreferenceChannels.Raw;
        critical: boolean;
        tags: string[];
        steps: serializers.NotificationStep.Raw[];
        _organizationId: string;
        _creatorId: string;
        _environmentId: string;
        triggers: serializers.NotificationTrigger.Raw[];
        _notificationGroupId: string;
        _parentId?: string | null;
        deleted: boolean;
        deletedAt: string;
        deletedBy: string;
        notificationGroup?: serializers.NotificationGroup.Raw | null;
    }
}
