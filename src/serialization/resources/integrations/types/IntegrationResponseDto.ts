/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../../..";
import { Novu } from "@fern-api/novu";
import * as core from "../../../../core";

export const IntegrationResponseDto: core.serialization.ObjectSchema<
    serializers.IntegrationResponseDto.Raw,
    Novu.IntegrationResponseDto
> = core.serialization.object({
    id: core.serialization.property("_id", core.serialization.string().optional()),
    environmentId: core.serialization.property("_environmentId", core.serialization.string()),
    organizationId: core.serialization.property("_organizationId", core.serialization.string()),
    providerId: core.serialization.string(),
    channel: core.serialization.lazy(async () => (await import("../../..")).ChannelPreferenceType),
    credentials: core.serialization.lazyObject(async () => (await import("../../..")).CredentialsDto),
    active: core.serialization.boolean(),
    deleted: core.serialization.boolean(),
    deletedAt: core.serialization.string(),
    deletedBy: core.serialization.string(),
});

export declare namespace IntegrationResponseDto {
    interface Raw {
        _id?: string | null;
        _environmentId: string;
        _organizationId: string;
        providerId: string;
        channel: serializers.ChannelPreferenceType.Raw;
        credentials: serializers.CredentialsDto.Raw;
        active: boolean;
        deleted: boolean;
        deletedAt: string;
        deletedBy: string;
    }
}
