/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../../..";
import { Novu } from "@fern-api/novu";
import * as core from "../../../../core";

export const TriggerEventRequestDto: core.serialization.ObjectSchema<
    serializers.TriggerEventRequestDto.Raw,
    Novu.TriggerEventRequestDto
> = core.serialization.object({
    name: core.serialization.string(),
    payload: core.serialization.record(core.serialization.string(), core.serialization.unknown()),
    overrides: core.serialization.record(core.serialization.string(), core.serialization.unknown()).optional(),
    to: core.serialization.lazy(async () => (await import("../../..")).TriggerEventRequestDtoTo),
    transactionId: core.serialization.string().optional(),
    actor: core.serialization.lazy(async () => (await import("../../..")).TriggerEventRequestDtoActor).optional(),
});

export declare namespace TriggerEventRequestDto {
    interface Raw {
        name: string;
        payload: Record<string, unknown>;
        overrides?: Record<string, unknown> | null;
        to?: serializers.TriggerEventRequestDtoTo.Raw;
        transactionId?: string | null;
        actor?: (serializers.TriggerEventRequestDtoActor.Raw | undefined) | null;
    }
}
